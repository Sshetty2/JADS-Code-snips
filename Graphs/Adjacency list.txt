var Graph = class{
    constructor(){
        this.adjacencyList = {};
    }

    addVertex(vertex){
        if(!this.adjacencyList[vertex]) this.adjacencyList[vertex] = [];
    }

    addEdge(vertex1, vertex2){
        this.adjacencyList[vertex1].push(vertex2);
        this.adjacencyList[vertex2].push(vertex1);
    }
    
    removeEdge(v1, v2){
        this.adjacencyList[v1] = this.adjacencyList[v1].filter( v => v !== v2)
        this.adjacencyList[v2] = this.adjacencyList[v2].filter( v => v !== v1)
    }
    

    // colts implementation
     removeVertex(vertex) {
        while(this.adjacencyList[vertex].length) {
            const adjacentVertex = this.adjacencyList[vertex].pop();
            this.removeEdge(vertex, adjacentVertex);
           }
        delete this.adjacencyList[vertex]
        return this
     }
       

}

graph = new Graph()
graph.addVertex('First Vertex')
graph.addVertex('Second Vertex')
graph.addVertex('Third Vertex')
graph.addEdge('First Vertex', 'Third Vertex')
graph.addEdge('First Vertex', 'Second Vertex')
graph.removeEdge('First Vertex', 'Second Vertex')
console.log(graph)